apiVersion: apps/v1
kind: Deployment
metadata:
  name: signal-generator-real
  namespace: crypto-trading
  labels:
    app: signal-generator-real
    component: signal-generation
    node-type: trading-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: signal-generator-real
  template:
    metadata:
      labels:
        app: signal-generator-real
        component: signal-generation
        node-type: trading-engine
    spec:
      nodeSelector:
        node-name: cryptoai-ml-trading-engine
      tolerations:
      - key: "trading-engine"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      containers:
      - name: signal-generator-real
        image: signal-generator-with-model:latest
        imagePullPolicy: IfNotPresent  # Use local image
        ports:
        - containerPort: 8025
          name: http
        envFrom:
        - configMapRef:
            name: crypto-trading-config
        - configMapRef:
            name: database-config
        - secretRef:
            name: database-secrets
        env:
        - name: MODEL_PATH
          value: "/app/models/model.joblib"
        - name: SCALER_PATH
          value: "/app/models/scaler.joblib"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8025
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8025
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: signal-generator-real
  namespace: crypto-trading
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8025"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8025
    targetPort: 8025
  selector:
    app: signal-generator-real
