apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: crypto-trading
  labels:
    app: grafana
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: monitoring
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-dashboard-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-datasource-config
          mountPath: /etc/grafana/provisioning/datasources
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-dashboard-config
        configMap:
          name: grafana-dashboard-config
      - name: grafana-datasource-config
        configMap:
          name: grafana-datasource-config
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: crypto-trading
  labels:
    app: grafana
    component: monitoring
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: grafana
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource-config
  namespace: crypto-trading
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus.monitoring.svc.cluster.local:9090
      access: proxy
      isDefault: true
      editable: true
    - name: Loki
      type: loki
      url: http://loki.monitoring.svc.cluster.local:3100
      access: proxy
      editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-config
  namespace: crypto-trading
data:
  dashboard.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards
  node-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "CryptoAI Trading Engine - Node Overview",
        "tags": ["crypto", "trading", "nodes", "kubernetes"],
        "timezone": "browser",
        "refresh": "30s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "Node Purposes",
            "type": "table",
            "targets": [
              {
                "expr": "kube_node_info",
                "format": "table",
                "instant": true
              }
            ],
            "fieldConfig": {
              "defaults": {
                "custom": {
                  "displayMode": "list",
                  "filterable": true
                }
              },
              "mappings": [],
              "thresholds": {
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  }
                ]
              }
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "Node Labels",
            "type": "table",
            "targets": [
              {
                "expr": "kube_node_labels",
                "format": "table",
                "instant": true
              }
            ],
            "fieldConfig": {
              "defaults": {
                "custom": {
                  "displayMode": "list",
                  "filterable": true
                }
              },
              "mappings": [],
              "thresholds": {
                "steps": [
                  {
                    "color": "blue",
                    "value": null
                  }
                ]
              }
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 0
            }
          }
        ]
      }
    }

