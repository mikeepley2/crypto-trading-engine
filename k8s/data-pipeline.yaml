apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-pipeline
  namespace: crypto-trading
  labels:
    app: data-pipeline
    component: data-processing
    version: v1.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-pipeline
  template:
    metadata:
      labels:
        app: data-pipeline
        component: data-processing
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8043"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: data-pipeline
        image: aitest-data-pipeline:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9093
          name: metrics
        env:
        - name: DATABASE_HOST
          value: "host.docker.internal"
        - name: DATABASE_USER
          value: "news_collector"
        - name: DATABASE_PASSWORD
          value: "99Rules!"
        - name: DATABASE_NAME
          value: "crypto_prices"
        - name: AWS_REGION
          value: "us-west-2"
        - name: FEATURE_CACHE_TTL
          value: "3600"
        - name: DATA_QUALITY_THRESHOLD
          value: "0.95"
        - name: ENABLE_FEATURE_STORE
          value: "true"
        - name: METRICS_PORT
          value: "9093"
        - name: LOG_LEVEL
          value: "INFO"
        - name: PROMETHEUS_METRICS_ENABLED
          value: "true"
        - name: PIPELINE_BATCH_SIZE
          value: "1000"
        - name: FEATURE_ENGINEERING_ENABLED
          value: "true"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
---
apiVersion: v1
kind: Service
metadata:
  name: data-pipeline
  namespace: crypto-trading
  labels:
    app: data-pipeline
    component: data-processing
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9093"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: data-pipeline
  ports:
  - name: http
    port: 8043
    targetPort: 8000
    protocol: TCP
  - name: metrics
    port: 9093
    targetPort: 9093
    protocol: TCP
  type: ClusterIP
