apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-signal-publisher
  namespace: crypto-trading
  labels:
    app: redis-signal-publisher
    component: signal-streaming
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-signal-publisher
  template:
    metadata:
      labels:
        app: redis-signal-publisher
        component: signal-streaming
    spec:
      containers:
      - name: redis-signal-publisher
        image: aitest-redis-signal-publisher:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: REDIS_HOST
          value: "infra-redis"
        - name: REDIS_PORT
          value: "6379" 
        - name: REDIS_DB
          value: "0"
        - name: DATABASE_HOST
          value: "172.22.32.1"
        - name: DATABASE_USER
          value: "news_collector"
        - name: DATABASE_PASSWORD
          value: "99Rules!"
        - name: DATABASE_NAME
          value: "crypto_prices"
        - name: DATABASE_PORT
          value: "3306"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi" 
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - python3
            - -c
            - "import redis; r = redis.Redis(host='infra-redis', port=6379); r.ping()"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - python3
            - -c
            - "import redis; r = redis.Redis(host='infra-redis', port=6379); r.ping()"
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: redis-signal-publisher
  namespace: crypto-trading
  labels:
    app: redis-signal-publisher
spec:
  selector:
    app: redis-signal-publisher
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
  type: ClusterIP
