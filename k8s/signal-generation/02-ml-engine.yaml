apiVersion: v1
kind: Service
metadata:
  name: signal-gen-ml-engine
  namespace: crypto-trading
  labels:
    app: signal-gen-ml-engine
    service: ml-engine
spec:
  selector:
    app: signal-gen-ml-engine
  ports:
  - name: http
    port: 8051
    targetPort: 8051
  - name: metrics
    port: 9091
    targetPort: 8051
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: signal-gen-ml-engine
  namespace: crypto-trading
  labels:
    app: signal-gen-ml-engine
    service: ml-engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: signal-gen-ml-engine
  template:
    metadata:
      labels:
        app: signal-gen-ml-engine
        service: ml-engine
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8051"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ml-engine
        image: crypto-signal-gen-ml-engine:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8051
          name: http
        env:
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: signal-gen-config
              key: LOG_LEVEL
        - name: PYTHONUNBUFFERED
          valueFrom:
            configMapKeyRef:
              name: signal-gen-config
              key: PYTHONUNBUFFERED
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8051
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8051
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: models
          mountPath: /app/models
      volumes:
      - name: logs
        emptyDir: {}
      - name: models
        persistentVolumeClaim:
          claimName: model-storage
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-storage
  namespace: crypto-trading
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi